# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

type Post @model
  @auth(rules: [
    { allow: owner },
    { allow: public, operations: [read] },
    { allow: private, operations: [read] }
  ]) {
  id: ID!
  name: String!
  location: String!
  latLong: String!
  description: String!
  username: String! @index(name: "byUser", sortKeyFields: ["name"])
  image: String
  firstName: String
  lastName: String
  createdAt: AWSDateTime
}

type User @model
  @auth(rules: [
      { allow: owner },
      { allow: public, operations: [read] },
      { allow: private, operations: [read] }
    ]) {
      firstName: String!
      lastName: String!
      username: String!
      email: String!
      friends: [String]
      posts: [Post] @hasMany(indexName: "byUser", fields: ["username"])
      incomingFriendRequests: [String]
      outgoingFriendRequests: [String]
}

type Query {
    batchGetUsers(ids: [String]): [User]
}

  # friends: [User] @hasMany(indexName: "byUser", fields: ["username"])
      # posts: [Post] @hasMany(indexName: "byOwner", fields: ["username"])
      # friendsPosts: [Post] @hasMany(indexName: "byOwner", fields: ["username"])
